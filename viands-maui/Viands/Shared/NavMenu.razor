@using System.Diagnostics;
@using Viands.Support;
@using Viands.Components;

@implements IDisposable;

<div class="top-row ps-3 navbar navbar-dark">
    <svg version="1.2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 6250 2000" width="100" height="32" class="viands_logo_light_on_xpar">
        <style>
            tspan {
                white-space: pre
            }

            .s0 {
                fill: none;
                stroke: #545454;
                stroke-miterlimit: 100;
                stroke-width: 80
            }

            .s1 {
                fill: #ffffff
            }

            .t2 {
                font-size: 700px;
                fill: #ffffff;
                font-weight: 400;
                font-family: "AbyssinicaSIL-Regular", "Abyssinica SIL"
            }
        </style>
        <g>
            <path class="s0" d="m1759.3 1792.5c-294.8 0-533.1-238.3-533.1-533.1 0-294.8 238.3-533.1 533.1-533.1 294.8 0 533.1 238.3 533.1 533.1 0 294.8-238.3 533.1-533.1 533.1z" />
            <path class="s1" d="m1531.6 841.4c-8.7-45.9-28.1-80-57.8-102.8-27.2-25.3-65.2-31.5-114.2-18.6q-12.9 3.3-24.9 9.9-12.9 3.4-29.2 11.1-4.3 1.1-7.6 5.4 0 0-4.3 1.1-12.9 3.4-15.7-6.1c-1.8-6.4 3.4-20.2 15.5-41.5q14.3-13.9 60.3-29.4 45.1-18.6 87-33.1 41.9-14.4 50.6-16.7 60.3-15.9 114.5-23.5c36.3-5 70-0.2 101.3 14.4q28 9.9 51.2 31.9c15.5 14.7 23.7 31.4 24.4 50.3 5.1 13 4.9 38.3-0.5 76.1-3.3 35.2-8.4 75-15.4 119.5-3.9 44.3-9.2 85.6-15.8 123.8-4.5 35.4-6.1 59.8-4.9 72.9-7.4 77.8-12.2 165.1-14.4 262.8-2.3 100.4 8.2 176.4 31.9 226.3 99.4-210.7 197.5-412.6 294.5-606.4 92.9-185.5 199-356.6 318.4-515.2 45.2-65.9 93.6-127.2 145.2-184.2 49.9-58.4 112.9-110.9 189.2-158 33.2-20 66.4-34.5 99.6-43.5 48.5-13.1 94.9-19 139.3-17.7 44.7 1.3 78.7 7.8 101.9 19.6 16.5 2.4 30.3 11.2 41.3 26.5 16.7 23.2 12.4 38.2-12.8 44.9-6.3 1.7-21.7 1.2-46-1.6q-33.6-8.3-80.3 4.2-46.7 12.4-88.5 23.6c-64.8 17.3-133.4 59.6-206.6 127.5-70.9 67.8-144.5 152.4-221.2 254.8-75.2 103.8-148.8 216.7-220.9 339.6-74.1 126.4-142 254.2-203.6 383.8-60 132.8-108.7 254.1-145.4 363.1-34.1 111.1-46.5 195-36.3 250.1q7.8 23.9-16.2 39.4-23.9 15.6-34.7 17.9c-68.3 14.9-122.4-0.6-162-45.9-38.9-44.4-63.4-91.3-73.7-140.4-7.6-89.8-8.7-180.2-3.6-271.2 7.4-92.2 13.4-180.4 18.1-264.8 0.7-19.3 2-43.9 2.2-73.7 1.4-190.7-18.3-274.3-29.7-303.8" />
            <text style="transform: matrix(1.65,0,0,1.65,2374.7,1551.2)">
                <tspan x="0" y="0" class="t2">iands</tspan>
            </text>
        </g>
    </svg>
    <svg version="1.2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2000 2000" width="52" height="52" class="viands_icon_light_on_xpar">
        <style>
            .s0 {
                fill: none;
                stroke: #545454;
                stroke-miterlimit: 100;
                stroke-width: 80
            }

            .s1 {
                fill: #ffffff
            }
        </style>
        <g>
            <path class="s0" d="m651.3 1792.5c-294.8 0-533.1-238.3-533.1-533.1 0-294.8 238.3-533.1 533.1-533.1 294.8 0 533.1 238.3 533.1 533.1 0 294.8-238.3 533.1-533.1 533.1z" />
            <path class="s1" d="m423.6 841.4c-8.7-45.9-28.1-80-57.8-102.8-27.2-25.3-65.2-31.5-114.2-18.6q-12.9 3.3-24.9 9.9-12.9 3.4-29.2 11.1-4.3 1.1-7.6 5.4 0 0-4.3 1.1-12.9 3.4-15.7-6.1c-1.8-6.4 3.4-20.2 15.5-41.5q14.3-13.9 60.3-29.4 45.1-18.6 87-33.1 41.9-14.4 50.6-16.7 60.3-15.9 114.5-23.5c36.3-5 70-0.2 101.3 14.4q28 9.9 51.2 31.9c15.5 14.7 23.7 31.4 24.4 50.3 5.1 13 4.9 38.3-0.5 76.1-3.3 35.2-8.4 75-15.4 119.5-3.9 44.3-9.2 85.6-15.8 123.8-4.5 35.4-6.1 59.8-4.9 72.9-7.4 77.8-12.2 165.1-14.4 262.8-2.3 100.4 8.2 176.4 31.9 226.3 99.4-210.7 197.5-412.6 294.5-606.4 92.9-185.5 199-356.6 318.4-515.2 45.3-65.9 93.6-127.2 145.2-184.2 49.9-58.4 112.9-110.9 189.2-158 33.2-20 66.4-34.5 99.6-43.5 48.5-13.1 94.9-19 139.3-17.7 44.7 1.3 78.7 7.8 101.9 19.6 16.5 2.4 30.3 11.2 41.3 26.5 16.7 23.2 12.4 38.2-12.8 44.9-6.3 1.7-21.7 1.2-46-1.6q-33.6-8.3-80.3 4.2-46.7 12.4-88.5 23.6c-64.8 17.3-133.4 59.6-206.6 127.5-70.9 67.8-144.5 152.4-221.2 254.8-75.2 103.8-148.8 216.7-220.9 339.6-74.1 126.4-142 254.2-203.6 383.8-60 132.8-108.7 254.1-145.4 363.1-34.1 111.1-46.5 195-36.3 250.1q7.8 23.9-16.2 39.4-23.9 15.6-34.7 17.9c-68.3 14.9-122.4-0.6-162-45.9-38.9-44.4-63.4-91.2-73.7-140.4-7.6-89.8-8.7-180.2-3.6-271.2 7.4-92.2 13.4-180.4 18.1-264.8 0.7-19.3 2-43.9 2.2-73.7 1.4-190.7-18.3-274.3-29.7-303.8" />
        </g>
    </svg>
    <div class="container-fluid title_bar">
        <h4>@TitleBar</h4>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="sidebar_nav @NavMenuCssClass @(DisplayUtils.ShowNavButtonTitles ? "titles_showing" : null)">
    <nav class="sidebar_tools">
        <div class="tools_left">
            @foreach (var navTool in Viands.Support.NavTools.NavigationTools.Where(t => !t.right))
            {
                <NavToolButton NavTool=@navTool />
            }
        </div>
        <div class="tools_right">
            @if (ShowToolsHelper)
            {
                <NavToolButton NavTool=@NavTools.GetShowTitlesNavTool() />
            }
            @foreach (var navTool in Viands.Support.NavTools.NavigationTools.Where(t => t.right))
            {
                <NavToolButton NavTool=@navTool />
            }
        </div>
    </nav>
</div>

@code {

    private string TitleBar { get; set; }

    private bool ToolsLocked = false;

    private bool CollapseNavMenu = true;

    private bool ShowToolsHelper = false;

    private string NavMenuCssClass => CollapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        if (ToolsLocked) return;
        CollapseNavMenu = !CollapseNavMenu;
        SettingsUtils.SetBoolSetting(SettingsUtils.SettingTypes.ToolsPanelClosed, CollapseNavMenu);
    }

    private void HandleEvent(GlobalCallbacks.CBKeys key, dynamic args)
    {
        switch (key)
        {
            case GlobalCallbacks.CBKeys.RefreshState:
                StateHasChanged();
                break;
            case GlobalCallbacks.CBKeys.SetTitle:
                TitleBar = (string)args;
                StateHasChanged();
                break;
            case GlobalCallbacks.CBKeys.ToolsLockedClosed:
                CollapseNavMenu = true;
                ToolsLocked = true;
                StateHasChanged();
                break;
            case GlobalCallbacks.CBKeys.ToolsLockedOpen:
                CollapseNavMenu = false;
                ToolsLocked = true;
                StateHasChanged();
                break;
            case GlobalCallbacks.CBKeys.ToolsUnlocked:
                ToolsLocked = false;
                RestoreToolBar();
                break;
            case GlobalCallbacks.CBKeys.ShowNavButtonTitles:
            case GlobalCallbacks.CBKeys.HideNavButtonTitles:
                StateHasChanged();
                break;
        }
    }

    protected async override Task OnInitializedAsync()
    {
        GlobalCallbacks.OnTriggerCallback -= HandleEvent;
        GlobalCallbacks.OnTriggerCallback += HandleEvent;
        ShowToolsHelper = await SettingsUtils.GetBoolSetting(SettingsUtils.SettingTypes.ShowToolsHelper);
        RestoreToolBar();
        await base.OnInitializedAsync();
    }

    private async void RestoreToolBar()
    {
        CollapseNavMenu = await SettingsUtils.GetBoolSetting(SettingsUtils.SettingTypes.ToolsPanelClosed);
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        GlobalCallbacks.OnTriggerCallback -= HandleEvent;
    }
}
